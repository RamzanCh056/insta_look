import 'dart:convert';
import 'package:flutter/material.dart';

import 'package:http/http.dart' as http;

class Autogenerated {
  int? response;
  int? code;
  List<Data>? data;

  Autogenerated({this.response, this.code, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    response = json['response'];
    code = json['code'];
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(new Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['response'] = this.response;
    data['code'] = this.code;
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Data {
  String? id;
  String? imageName;
  String? title;
  String? description;

  Data({this.id, this.imageName, this.title, this.description});

  Data.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    imageName = json['image_name'];
    title = json['title'];
    description = json['description'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['image_name'] = this.imageName;
    data['title'] = this.title;
    data['description'] = this.description;
    return data;
  }
}


class IssueListApi extends StatefulWidget {
  IssueListApi({Key? key}) : super(key: key);

  @override
  State<IssueListApi> createState() => _IssueListApiState();
}

class _IssueListApiState extends State<IssueListApi> {
  Future<Autogenerated> getPostApi() async {
    final response = await http.get(
        Uri.parse("https://dev.noqta-market.com/API/AddBanner.php"));
    var data = jsonDecode(response.body.toString());
    if (response.statusCode == 201) {
      return Autogenerated.fromJson(data);
    } else {
      return Autogenerated.fromJson(data);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.white,
        centerTitle: true,
      
      ),
      body: Column(
        children: [
          Expanded(
              child: FutureBuilder<Autogenerated>(
                  future: getPostApi(),
                  builder: (context, snapshot,) {

                    if(snapshot.hasData){
                      return Container(child: Image.network(snapshot.data!.data![0].imageName.toString()));
                    }
                    else
                    {return Container();}
                    // ListView.builder(
                    //   itemCount: snapshot.data!.data!.length,
                    //   itemBuilder: (context, index) {
                    //     return Padding(
                    //       padding: const EdgeInsets.only(
                    //           left: 12, right: 12, top: 8),
                    //       child: Column(
                    //         children: [
                    //           Card(
                    //               child: Column(
                    //             children: [
                    //               Row(
                    //                 children: [
                    //                   Padding(
                    //                     padding: const EdgeInsets.all(8.0),
                    //                     child: Column(
                    //                       children: [
                    //                         CircleAvatar(
                    //                           backgroundImage:NetworkImage(snapshot
                    //                               .data!.data![index].imageName
                    //                               .toString()), 
                    //                           radius: 35,
                    //                           backgroundColor: Colors.white,
                    //                         ),
                    //                       ],
                    //                     ),
                    //                   ),
                    //                   Flexible(
                    //                     child: Padding(
                    //                       padding: const EdgeInsets.all(8.0),
                    //                       child: Column(
                    //                         crossAxisAlignment:
                    //                             CrossAxisAlignment.start,
                    //                         children: [
                    //                           Text(snapshot.data!.data![index].title
                    //                               .toString()),
                    //                           Text(snapshot
                    //                               .data!.data![index].description
                    //                               .toString()),
                    //                           Text(snapshot
                    //                               .data!.data![index].id
                    //                               .toString()),
                                             
                    //                         ],
                    //                       ),
                    //                     ),
                    //                   ),
                                     
                    //                 ],
                    //               ),
                    //             ],
                    //           )),
                    //           Container(child: Image.network(snapshot
                    //                               .data!.data![index].imageName
                    //                               .toString()), )
                    //         ],
                    //       ),
                          
                    //     );
                      
                    //   },
                    // );
                    
                  }
                  ),
                  
                  ),
         
        ],
      ),
    );
  }
}
